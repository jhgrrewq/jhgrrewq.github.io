##

使用 lerna 管理项目

大型的组件库传统的做法将模块拆分成多个仓库，往往会有版本更新（同步多个仓库更新和依赖），而lerna 是将多个模块都放入一个仓库，每个模块都有自己的依赖（package.json），都能独立作为 npm 包发布

```js
// 全局安装 lerna
npm i -g lerna
//
mkdir lerna-test && git init lerna-test && cd lerna-test
// 初始化 lerna 项目
lerna init
```

lerna 初始化项目会得到如下结构

```js
lerna-test/
  packages/
  lerna.json
  package.json
```


packages 文件夹

- 每个组件单独一个文件夹，文件夹下 src/*.vue 定义组件
index.js 重新导入导出组件，cooking.conf.js 打包文件（将index.js 打包输出到 lib/组件名/index.js，css 单独提取放在同一个目录下）

build 文件夹

- build-entries 文件用来生成 src/index.js 文件。通过读取根目录下 components.json，获取变量输出模板

src 文件夹

- index.js 文件定义了 vue 插件。因为组件库有两种使用方式，全局注册组件和组件按需加载，因此 index.js 文件导出的对象 除了将每个引入组件导出方便使用时引入，同时还含有 install 方法，install 方法会将全部组件引入进行全局注册